module pwd (btn, _rst, out);

input logic btn, clk, _rst
output logic out;
logic [8:0] Q;
logic [8:0] sout;

reg9 U1(.btn(btn), .clk(clk), ._rst(_rst), .Q(Q));
sch_par #(.schet(1)) schet1(.enable(Q[8]), .out(sout[8]), clk);
sch_par #(.schet(2)) schet2(.enable(Q[7]), .out(sout[7]), clk);
sch_par #(.schet(3)) schet3(.enable(Q[6]), .out(sout[6]), clk);
sch_par #(.schet(4)) schet4(.enable(Q[5]), .out(sout[5]), clk);
sch_par #(.schet(5)) schet5(.enable(Q[4]), .out(sout[4]), clk);
sch_par #(.schet(6)) schet6(.enable(Q[3]), .out(sout[3]), clk);
sch_par #(.schet(7)) schet7(.enable(Q[2]), .out(sout[2]), clk);
sch_par #(.schet(8)) schet8(.enable(Q[1]), .out(sout[1]), clk);
sch_par #(.schet(9)) schet9(.enable(Q[0]), .out(sout[0]), clk);

or(out, sout[8:0]);

endmodule
