module moore (clk, res_n, D, F);

input logic clk, res_n, D;
output logic F;

logic state;

always @(posedge clk or negedge rest_n) begin
	if (!res_n) begin
		state <= 0;
	F <= 0;
	end
	
	else begin
		case(state)
		0 : begin
			if (D) begin
				state <= 1;
				F <= 0;
			end
			else begin
				state <= 0;
				F <= 0;
			end
			
		1 : begin
			if (D) begin
				state <= 1;
				F <= 1;
			end
			else begin
				state <= 0;
				F <= 0;
			end
		endcase
	end
endmodule
